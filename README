


03/29/2015 

## identify genes where missense mutations in only some regions are below expectation..

## add function to take dbSNFP file and add polyphen/conservation scores to each missense mutation in GENE.missense.all file ## transcript model is important 
python read_dbSNFP.py MLL2  ~/Public/tools/reference-genomes/ncbi37.fa
## combine this with gene_translate or run afterwards...

python gene_translate.py --ref=/home/vbansal/Public/tools/reference-genomes/ncbi37.fa --model=../refseq.genes.ncbi37 --type=stop --gene=MLL2 --out=MLL2.stopgain.all
python analyse_gene_mutations.py MLL2.stopgain.all /media/drive2/Kabuki_mutations/MUTATION_LIST

## code to explore space of all possible coding mutations per gene/transcript | annotate using mutation rates and known mutations 
## gene_translate should output chr:pos for all mutations so that we can match real mutations (from ExAc) without any annotation 

gene_translate.py: (1) output coding sequence of exons of each gene and the translation as well. can be used to output set of all coding mutations per transcript (all stop, all missense,etc), study frameshift mutations...

read_fasta_bychrom.py: read fasta file and build index if it doesnt exist, if index exists, it will read sequence of only that chromosome 

read_muttable.py: read 64 trimer mutation matrix file and output hashtable 

multinomial_test.py: calculate p-value of mutation distribution across exons of a gene relative to mutation rate matrix 




